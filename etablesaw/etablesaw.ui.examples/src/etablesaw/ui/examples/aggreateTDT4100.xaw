xaw etablesaw.ui.examples.aggregateTDT4100

table Tdt4100Table {
	String programkode,
	int studentnr,
	String karakter,
	String vurderingsstatus,
	int year,
	String semester
}

table AggregateTable {
	String programkode,
	int studentnr,
	int failCount,
	int timeToRetake,
	String grade,
	int year
}

val here = "/Users/hal/java/git/etablesaw/etablesaw/etablesaw.ui.examples/src/etablesaw/ui/examples/"

val tdt4100 = # Tdt4100Table # += Table.read().csv(here + "tdt4100-2010-2018.csv")
val aggregate = # AggregateTable #

var int currentStud = 0
var aggregateTDT4100_Tdt4100Table currentRows = null

for (row : tdt4100.rows) {
	if (row.studentnr !== currentStud) {
		if (currentRows !== null && currentRows.rowCount > 0) {
			aggregate(currentRows, aggregate)
		}
		currentRows = tdt4100.emptyCopy
	}
	currentRows.append(row)
	currentStud = row.studentnr
}
if (currentRows !== null && currentRows.rowCount > 0) {
	aggregate(currentRows, aggregate)
}
System.out.println("Reduced from " + tdt4100.rowCount + " to " + aggregate.rowCount + " rows")

exportTable(aggregate, "aggregate")

def aggregate(aggregateTDT4100_Tdt4100Table exams, aggregateTDT4100_AggregateTable aggregate) {
	var gradeYear = 0
	val aggreateRow = aggregate.appendEmptyRow
	aggreateRow.failCount = 0
	aggreateRow.grade = ""
	for (row : exams.rows()) {
		aggreateRow.programkode = row.programkode
		aggreateRow.studentnr = row.studentnr
		if (aggreateRow.year <= 0) {
			aggreateRow.year = row.year
		}
		if (row.karakter.isFail) {
			aggreateRow.failCount = aggreateRow.failCount + 1
		}
		if (aggreateRow.grade.isEmpty || (row.karakter.length > 0 && row.karakter < aggreateRow.grade)) {
			if (aggreateRow.grade.isPass && row.karakter.isPass) {
				aggreateRow.timeToRetake = row.year - gradeYear
			}
			aggreateRow.grade = row.karakter
			gradeYear = row.year
		}
	}
}

def boolean isPass(String karakter) {
	karakter.length > 0 && "ABCDE".indexOf(karakter) >= 0
}

def boolean isNotPass(String karakter) {
	"ABCDE".indexOf(karakter) < 0
}
def boolean isFail(String karakter) {
	karakter == "F"
}
