/*
 * generated by Xtext 2.12.0
 */
package etablesaw.xtext.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Test
import org.junit.runner.RunWith
import etablesaw.xtext.xaw.Xaw
import tech.tablesaw.api.Table

import static org.junit.Assert.*
import etablesaw.xtext.jvmmodel.XawInterpreter

@RunWith(XtextRunner)
@InjectWith(XawInjectorProvider)
class XawInterpreterTest {
	
	@Inject extension ParseHelper<Xaw>	

	@Inject XawInterpreter interpreter	
	
	@Test
	def void interpretModel() {
		val model = parse('''
					xaw etablesaw.xtext.tests.InterpretModelTest
					val halAge = 52.0
					val table1 =
					#table2: String name, double age #
					| "Hallvard", halAge |
					val table2 =
					#table3: String name, double age #
					| "Hallvard", halAge + 1 |
					val table3 = # String name = table1.column("name"), double age = table2.column("age")#
					table3
				''')
		val result = interpreter.evaluate(model)
		assertTrue(result.result instanceof Table)
		val table = result.result as Table
		assertEquals(1, table.size)
		assertEquals(2, table.columnCount)
		assertEquals("Hallvard", table.column(0).get(0))
		assertEquals(Double.valueOf(53), table.column(1).get(0))
		val tables = (interpreter as XawInterpreter).topLevelTables;
		assertEquals(2, tables.size)
	}
}
