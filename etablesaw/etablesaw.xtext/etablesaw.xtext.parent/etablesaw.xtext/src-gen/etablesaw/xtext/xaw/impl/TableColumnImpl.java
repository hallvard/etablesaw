/**
 * generated by Xtext 2.14.0
 */
package etablesaw.xtext.xaw.impl;

import etablesaw.xtext.xaw.TableColumn;
import etablesaw.xtext.xaw.TableColumnDef;
import etablesaw.xtext.xaw.XawPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.xtext.xbase.XExpression;

import org.eclipse.xtext.xbase.impl.XExpressionImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Table Column</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link etablesaw.xtext.xaw.impl.TableColumnImpl#getColumnDef <em>Column Def</em>}</li>
 *   <li>{@link etablesaw.xtext.xaw.impl.TableColumnImpl#getExpression <em>Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TableColumnImpl extends XExpressionImpl implements TableColumn
{
  /**
   * The cached value of the '{@link #getColumnDef() <em>Column Def</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColumnDef()
   * @generated
   * @ordered
   */
  protected TableColumnDef columnDef;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected XExpression expression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TableColumnImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XawPackage.Literals.TABLE_COLUMN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TableColumnDef getColumnDef()
  {
    return columnDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetColumnDef(TableColumnDef newColumnDef, NotificationChain msgs)
  {
    TableColumnDef oldColumnDef = columnDef;
    columnDef = newColumnDef;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XawPackage.TABLE_COLUMN__COLUMN_DEF, oldColumnDef, newColumnDef);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setColumnDef(TableColumnDef newColumnDef)
  {
    if (newColumnDef != columnDef)
    {
      NotificationChain msgs = null;
      if (columnDef != null)
        msgs = ((InternalEObject)columnDef).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XawPackage.TABLE_COLUMN__COLUMN_DEF, null, msgs);
      if (newColumnDef != null)
        msgs = ((InternalEObject)newColumnDef).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XawPackage.TABLE_COLUMN__COLUMN_DEF, null, msgs);
      msgs = basicSetColumnDef(newColumnDef, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XawPackage.TABLE_COLUMN__COLUMN_DEF, newColumnDef, newColumnDef));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XExpression getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpression(XExpression newExpression, NotificationChain msgs)
  {
    XExpression oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XawPackage.TABLE_COLUMN__EXPRESSION, oldExpression, newExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpression(XExpression newExpression)
  {
    if (newExpression != expression)
    {
      NotificationChain msgs = null;
      if (expression != null)
        msgs = ((InternalEObject)expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XawPackage.TABLE_COLUMN__EXPRESSION, null, msgs);
      if (newExpression != null)
        msgs = ((InternalEObject)newExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XawPackage.TABLE_COLUMN__EXPRESSION, null, msgs);
      msgs = basicSetExpression(newExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XawPackage.TABLE_COLUMN__EXPRESSION, newExpression, newExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case XawPackage.TABLE_COLUMN__COLUMN_DEF:
        return basicSetColumnDef(null, msgs);
      case XawPackage.TABLE_COLUMN__EXPRESSION:
        return basicSetExpression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XawPackage.TABLE_COLUMN__COLUMN_DEF:
        return getColumnDef();
      case XawPackage.TABLE_COLUMN__EXPRESSION:
        return getExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XawPackage.TABLE_COLUMN__COLUMN_DEF:
        setColumnDef((TableColumnDef)newValue);
        return;
      case XawPackage.TABLE_COLUMN__EXPRESSION:
        setExpression((XExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XawPackage.TABLE_COLUMN__COLUMN_DEF:
        setColumnDef((TableColumnDef)null);
        return;
      case XawPackage.TABLE_COLUMN__EXPRESSION:
        setExpression((XExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XawPackage.TABLE_COLUMN__COLUMN_DEF:
        return columnDef != null;
      case XawPackage.TABLE_COLUMN__EXPRESSION:
        return expression != null;
    }
    return super.eIsSet(featureID);
  }

} //TableColumnImpl
