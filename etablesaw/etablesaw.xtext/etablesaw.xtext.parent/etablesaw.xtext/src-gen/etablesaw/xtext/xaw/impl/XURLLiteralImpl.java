/**
 * generated by Xtext 2.14.0
 */
package etablesaw.xtext.xaw.impl;

import etablesaw.xtext.xaw.XURLLiteral;
import etablesaw.xtext.xaw.XawPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.eclipse.xtext.xbase.impl.XExpressionImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>XURL Literal</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link etablesaw.xtext.xaw.impl.XURLLiteralImpl#getUrl <em>Url</em>}</li>
 *   <li>{@link etablesaw.xtext.xaw.impl.XURLLiteralImpl#getScheme <em>Scheme</em>}</li>
 *   <li>{@link etablesaw.xtext.xaw.impl.XURLLiteralImpl#getHost <em>Host</em>}</li>
 *   <li>{@link etablesaw.xtext.xaw.impl.XURLLiteralImpl#getPort <em>Port</em>}</li>
 *   <li>{@link etablesaw.xtext.xaw.impl.XURLLiteralImpl#getPath <em>Path</em>}</li>
 *   <li>{@link etablesaw.xtext.xaw.impl.XURLLiteralImpl#getParams <em>Params</em>}</li>
 *   <li>{@link etablesaw.xtext.xaw.impl.XURLLiteralImpl#getFrag <em>Frag</em>}</li>
 * </ul>
 *
 * @generated
 */
public class XURLLiteralImpl extends XExpressionImpl implements XURLLiteral
{
  /**
   * The default value of the '{@link #getUrl() <em>Url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUrl()
   * @generated
   * @ordered
   */
  protected static final String URL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUrl() <em>Url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUrl()
   * @generated
   * @ordered
   */
  protected String url = URL_EDEFAULT;

  /**
   * The default value of the '{@link #getScheme() <em>Scheme</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScheme()
   * @generated
   * @ordered
   */
  protected static final String SCHEME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getScheme() <em>Scheme</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScheme()
   * @generated
   * @ordered
   */
  protected String scheme = SCHEME_EDEFAULT;

  /**
   * The default value of the '{@link #getHost() <em>Host</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHost()
   * @generated
   * @ordered
   */
  protected static final String HOST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHost() <em>Host</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHost()
   * @generated
   * @ordered
   */
  protected String host = HOST_EDEFAULT;

  /**
   * The default value of the '{@link #getPort() <em>Port</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPort()
   * @generated
   * @ordered
   */
  protected static final int PORT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPort() <em>Port</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPort()
   * @generated
   * @ordered
   */
  protected int port = PORT_EDEFAULT;

  /**
   * The default value of the '{@link #getPath() <em>Path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPath()
   * @generated
   * @ordered
   */
  protected static final String PATH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPath() <em>Path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPath()
   * @generated
   * @ordered
   */
  protected String path = PATH_EDEFAULT;

  /**
   * The cached value of the '{@link #getParams() <em>Params</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParams()
   * @generated
   * @ordered
   */
  protected EList<String> params;

  /**
   * The default value of the '{@link #getFrag() <em>Frag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFrag()
   * @generated
   * @ordered
   */
  protected static final String FRAG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFrag() <em>Frag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFrag()
   * @generated
   * @ordered
   */
  protected String frag = FRAG_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected XURLLiteralImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XawPackage.Literals.XURL_LITERAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUrl()
  {
    return url;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUrl(String newUrl)
  {
    String oldUrl = url;
    url = newUrl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XawPackage.XURL_LITERAL__URL, oldUrl, url));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getScheme()
  {
    return scheme;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setScheme(String newScheme)
  {
    String oldScheme = scheme;
    scheme = newScheme;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XawPackage.XURL_LITERAL__SCHEME, oldScheme, scheme));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getHost()
  {
    return host;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHost(String newHost)
  {
    String oldHost = host;
    host = newHost;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XawPackage.XURL_LITERAL__HOST, oldHost, host));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getPort()
  {
    return port;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPort(int newPort)
  {
    int oldPort = port;
    port = newPort;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XawPackage.XURL_LITERAL__PORT, oldPort, port));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPath()
  {
    return path;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPath(String newPath)
  {
    String oldPath = path;
    path = newPath;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XawPackage.XURL_LITERAL__PATH, oldPath, path));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getParams()
  {
    if (params == null)
    {
      params = new EDataTypeEList<String>(String.class, this, XawPackage.XURL_LITERAL__PARAMS);
    }
    return params;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFrag()
  {
    return frag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFrag(String newFrag)
  {
    String oldFrag = frag;
    frag = newFrag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XawPackage.XURL_LITERAL__FRAG, oldFrag, frag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XawPackage.XURL_LITERAL__URL:
        return getUrl();
      case XawPackage.XURL_LITERAL__SCHEME:
        return getScheme();
      case XawPackage.XURL_LITERAL__HOST:
        return getHost();
      case XawPackage.XURL_LITERAL__PORT:
        return getPort();
      case XawPackage.XURL_LITERAL__PATH:
        return getPath();
      case XawPackage.XURL_LITERAL__PARAMS:
        return getParams();
      case XawPackage.XURL_LITERAL__FRAG:
        return getFrag();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XawPackage.XURL_LITERAL__URL:
        setUrl((String)newValue);
        return;
      case XawPackage.XURL_LITERAL__SCHEME:
        setScheme((String)newValue);
        return;
      case XawPackage.XURL_LITERAL__HOST:
        setHost((String)newValue);
        return;
      case XawPackage.XURL_LITERAL__PORT:
        setPort((Integer)newValue);
        return;
      case XawPackage.XURL_LITERAL__PATH:
        setPath((String)newValue);
        return;
      case XawPackage.XURL_LITERAL__PARAMS:
        getParams().clear();
        getParams().addAll((Collection<? extends String>)newValue);
        return;
      case XawPackage.XURL_LITERAL__FRAG:
        setFrag((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XawPackage.XURL_LITERAL__URL:
        setUrl(URL_EDEFAULT);
        return;
      case XawPackage.XURL_LITERAL__SCHEME:
        setScheme(SCHEME_EDEFAULT);
        return;
      case XawPackage.XURL_LITERAL__HOST:
        setHost(HOST_EDEFAULT);
        return;
      case XawPackage.XURL_LITERAL__PORT:
        setPort(PORT_EDEFAULT);
        return;
      case XawPackage.XURL_LITERAL__PATH:
        setPath(PATH_EDEFAULT);
        return;
      case XawPackage.XURL_LITERAL__PARAMS:
        getParams().clear();
        return;
      case XawPackage.XURL_LITERAL__FRAG:
        setFrag(FRAG_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XawPackage.XURL_LITERAL__URL:
        return URL_EDEFAULT == null ? url != null : !URL_EDEFAULT.equals(url);
      case XawPackage.XURL_LITERAL__SCHEME:
        return SCHEME_EDEFAULT == null ? scheme != null : !SCHEME_EDEFAULT.equals(scheme);
      case XawPackage.XURL_LITERAL__HOST:
        return HOST_EDEFAULT == null ? host != null : !HOST_EDEFAULT.equals(host);
      case XawPackage.XURL_LITERAL__PORT:
        return port != PORT_EDEFAULT;
      case XawPackage.XURL_LITERAL__PATH:
        return PATH_EDEFAULT == null ? path != null : !PATH_EDEFAULT.equals(path);
      case XawPackage.XURL_LITERAL__PARAMS:
        return params != null && !params.isEmpty();
      case XawPackage.XURL_LITERAL__FRAG:
        return FRAG_EDEFAULT == null ? frag != null : !FRAG_EDEFAULT.equals(frag);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (url: ");
    result.append(url);
    result.append(", scheme: ");
    result.append(scheme);
    result.append(", host: ");
    result.append(host);
    result.append(", port: ");
    result.append(port);
    result.append(", path: ");
    result.append(path);
    result.append(", params: ");
    result.append(params);
    result.append(", frag: ");
    result.append(frag);
    result.append(')');
    return result.toString();
  }

} //XURLLiteralImpl
