/**
 * generated by Xtext 2.14.0
 */
package etablesaw.xtext.xaw.util;

import etablesaw.xtext.xaw.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.xtext.xbase.XBlockExpression;
import org.eclipse.xtext.xbase.XExpression;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see etablesaw.xtext.xaw.XawPackage
 * @generated
 */
public class XawAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static XawPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XawAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = XawPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected XawSwitch<Adapter> modelSwitch =
    new XawSwitch<Adapter>()
    {
      @Override
      public Adapter caseXMethod(XMethod object)
      {
        return createXMethodAdapter();
      }
      @Override
      public Adapter caseXaw(Xaw object)
      {
        return createXawAdapter();
      }
      @Override
      public Adapter caseTableLiteral(TableLiteral object)
      {
        return createTableLiteralAdapter();
      }
      @Override
      public Adapter caseTableColumn(TableColumn object)
      {
        return createTableColumnAdapter();
      }
      @Override
      public Adapter caseInlineTableRow(InlineTableRow object)
      {
        return createInlineTableRowAdapter();
      }
      @Override
      public Adapter caseTableRowLiteral(TableRowLiteral object)
      {
        return createTableRowLiteralAdapter();
      }
      @Override
      public Adapter caseXLocalTimeLiteral(XLocalTimeLiteral object)
      {
        return createXLocalTimeLiteralAdapter();
      }
      @Override
      public Adapter caseXLocalDateLiteral(XLocalDateLiteral object)
      {
        return createXLocalDateLiteralAdapter();
      }
      @Override
      public Adapter caseXURLLiteral(XURLLiteral object)
      {
        return createXURLLiteralAdapter();
      }
      @Override
      public Adapter caseXUnaryOperation(XUnaryOperation object)
      {
        return createXUnaryOperationAdapter();
      }
      @Override
      public Adapter caseXCastedColumnExpression(XCastedColumnExpression object)
      {
        return createXCastedColumnExpressionAdapter();
      }
      @Override
      public Adapter caseXExpression(XExpression object)
      {
        return createXExpressionAdapter();
      }
      @Override
      public Adapter caseXBlockExpression(XBlockExpression object)
      {
        return createXBlockExpressionAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link etablesaw.xtext.xaw.XMethod <em>XMethod</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see etablesaw.xtext.xaw.XMethod
   * @generated
   */
  public Adapter createXMethodAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link etablesaw.xtext.xaw.Xaw <em>Xaw</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see etablesaw.xtext.xaw.Xaw
   * @generated
   */
  public Adapter createXawAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link etablesaw.xtext.xaw.TableLiteral <em>Table Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see etablesaw.xtext.xaw.TableLiteral
   * @generated
   */
  public Adapter createTableLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link etablesaw.xtext.xaw.TableColumn <em>Table Column</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see etablesaw.xtext.xaw.TableColumn
   * @generated
   */
  public Adapter createTableColumnAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link etablesaw.xtext.xaw.InlineTableRow <em>Inline Table Row</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see etablesaw.xtext.xaw.InlineTableRow
   * @generated
   */
  public Adapter createInlineTableRowAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link etablesaw.xtext.xaw.TableRowLiteral <em>Table Row Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see etablesaw.xtext.xaw.TableRowLiteral
   * @generated
   */
  public Adapter createTableRowLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link etablesaw.xtext.xaw.XLocalTimeLiteral <em>XLocal Time Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see etablesaw.xtext.xaw.XLocalTimeLiteral
   * @generated
   */
  public Adapter createXLocalTimeLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link etablesaw.xtext.xaw.XLocalDateLiteral <em>XLocal Date Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see etablesaw.xtext.xaw.XLocalDateLiteral
   * @generated
   */
  public Adapter createXLocalDateLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link etablesaw.xtext.xaw.XURLLiteral <em>XURL Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see etablesaw.xtext.xaw.XURLLiteral
   * @generated
   */
  public Adapter createXURLLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link etablesaw.xtext.xaw.XUnaryOperation <em>XUnary Operation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see etablesaw.xtext.xaw.XUnaryOperation
   * @generated
   */
  public Adapter createXUnaryOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link etablesaw.xtext.xaw.XCastedColumnExpression <em>XCasted Column Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see etablesaw.xtext.xaw.XCastedColumnExpression
   * @generated
   */
  public Adapter createXCastedColumnExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.eclipse.xtext.xbase.XExpression <em>XExpression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.eclipse.xtext.xbase.XExpression
   * @since 2.7
   * @generated
   */
  public Adapter createXExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.eclipse.xtext.xbase.XBlockExpression <em>XBlock Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.eclipse.xtext.xbase.XBlockExpression
   * @since 2.7
   * @generated
   */
  public Adapter createXBlockExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //XawAdapterFactory
